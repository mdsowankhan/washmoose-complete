plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

// ✅ CRITICAL FIX: Disable ALL debug symbol stripping tasks
gradle.taskGraph.whenReady {
    gradle.taskGraph.allTasks.each { task ->
        if (task.name.toLowerCase().contains('strip') || 
            task.name.toLowerCase().contains('debug') && task.name.toLowerCase().contains('symbol')) {
            task.enabled = false
            println "Disabled task: ${task.name}"
        }
    }
}

// ✅ Load signing properties from key.properties
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.washmoose.app"
    compileSdk 35
    
    // ✅ CRITICAL: Add NDK configuration to prevent library stripping
    ndkVersion "27.0.12077973"
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    
    kotlinOptions {
        jvmTarget = "11"
    }
    
    defaultConfig {
        applicationId "com.washmoose.app"
        minSdk 23
        targetSdk 35
        versionCode 1
        versionName "1.0.0"
        
        // ✅ CRITICAL: Specify ABI filters to include all architectures
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64', 'x86'
            debugSymbolLevel 'NONE'
        }
    }
    
    // ✅ Add proper signing configurations
    signingConfigs {
        debug {
            // Use default debug keystore path
            storeFile file(System.getProperty("user.home") + "/.android/debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            keyAlias keystoreProperties['keyAlias'] ?: 'upload'
            keyPassword keystoreProperties['keyPassword'] ?: 'android'
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : file('upload-keystore.jks')
            storePassword keystoreProperties['storePassword'] ?: 'android'
        }
    }
    
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            debuggable false
        }
    }
    
    // ✅ CRITICAL: Enhanced packaging options to preserve ALL native libraries
    packagingOptions {
        // Don't strip ANY .so files
        doNotStrip "**/*.so"
        doNotStrip "**/arm64-v8a/*.so"
        doNotStrip "**/armeabi-v7a/*.so"
        doNotStrip "**/x86/*.so"
        doNotStrip "**/x86_64/*.so"
        
        // Handle duplicate files
        pickFirst "**/libc++_shared.so"
        pickFirst "**/libjsc.so"
        pickFirst "**/libflutter.so"
        pickFirst "**/libapp.so"
        
        // Exclude conflicting files
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
    }
}

flutter {
    source "../.."
}

// ✅ Apply Firebase plugin
apply plugin: "com.google.gms.google-services"