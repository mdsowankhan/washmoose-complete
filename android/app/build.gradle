plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

// AGGRESSIVE FIX: Disable ALL debug symbol stripping tasks
gradle.taskGraph.whenReady {
    gradle.taskGraph.allTasks.each { task ->
        if (task.name.toLowerCase().contains('strip') || 
            task.name.toLowerCase().contains('debug') && task.name.toLowerCase().contains('symbol')) {
            task.enabled = false
            println "Disabled task: ${task.name}"
        }
    }
}

// ✅ NEW: Load signing properties from key.properties
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.washmoose.app"
    compileSdk 35
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    
    kotlinOptions {
        jvmTarget = "11"
    }
    
    defaultConfig {
        applicationId "com.washmoose.app"
        minSdk 23
        targetSdk 35
        versionCode 1
        versionName "1.0.0"
    }
    
    // ✅ NEW: Add proper signing configurations
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias'] ?: 'upload'
            keyPassword keystoreProperties['keyPassword'] ?: 'android'
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : file('upload-keystore.jks')
            storePassword keystoreProperties['storePassword'] ?: 'android'
        }
    }
    
    buildTypes {
        release {
            // ✅ FIXED: Now uses proper release signing instead of debug
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            debuggable false
        }
    }
    
    packagingOptions {
        doNotStrip "**/*.so"
        pickFirst "**/libc++_shared.so"
        pickFirst "**/libjsc.so"
    }
}

flutter {
    source "../.."
}

apply plugin: "com.google.gms.google-services"